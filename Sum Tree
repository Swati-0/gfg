class Solution
{
    pair<bool,int> isSumTreeFast(Node* root){
        if(root==NULL){
            pair<bool,int> p=make_pair(true,0);
        return p;
        }
        if(root->left==NULL && root->right==NULL){
            pair<bool,int> p=make_pair(true,root->data);
        return p;
        }
        pair<bool,int> left=isSumTreeFast(root->left);
        pair<bool,int> right=isSumTreeFast(root->right);
        
        bool leftans=left.first;
        bool rightans=right.first;
        bool sum=root->data==(left.second+right.second);
        pair<bool,int> ans;
        
        if(leftans && rightans && sum){
            ans.first=true;
            ans.second=2*root->data;
        }else{
            ans.first=false;
        }
        return ans;
    }
    public:
    bool isSumTree(Node* root)
    {
         // Your code herer
         return isSumTreeFast(root).first;
    }
};
