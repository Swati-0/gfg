class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        vector<int> dist(V,INT_MAX);
        dist[S]=0;
        set<pair<int,int>> st;
        st.insert({0,S});
        
        while(!st.empty()){
            auto top=*(st.begin());
            st.erase(st.begin());
            int nodedistance=top.first;
            int topnode=top.second;
            
            for(auto n:adj[topnode]){
                int neighbournode=n[0];
                int w=n[1];
                
                if(nodedistance+w<dist[neighbournode]){
                    auto record=st.find({dist[neighbournode],neighbournode});
                    
                    if(record!=st.end())
                    st.erase(record);
                    
                    dist[neighbournode]=nodedistance+w;
                    st.insert({dist[neighbournode],neighbournode});
                }
            }
        }
        return dist;
    }
};
